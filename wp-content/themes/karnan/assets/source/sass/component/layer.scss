.layer-wrapper {
    width: 100%;
    height: auto;
    left: 0;
    bottom: 0;
    z-index: $level-bottom;
    postion: relative;
}

.layer {
    bottom: 50px;
    left: 0;
    width: calc(100% - 0);
    @media #{$screen-md-up} and (orientation: portrait) {
        left: 17px;
        width: calc(100% - 17px);
    }
    @media #{$screen-md-up} {
        left: 125px;
        width: calc(100% - 125px);
    }

    position: fixed;
    transition: transform 500ms ease-out, opacity 450ms ease;
}

.layer-gras {
    @media screen and #{$screen-md-up} {
        bottom: 0;
    }
    @media screen and #{$screen-xl-up} {
        bottom: 100px;
    }
    transition: transform 500ms linear, opacity 400ms ease-in;
}

.layer img {
    width: 100%;
    height: auto;
}

.layer.depth-1 {
    z-index: $level-1;
}

.layer.depth-2 {
    z-index: $level-2;
}

.layer.depth-3 {
    z-index: $level-3;
}

.layer.depth-4 {
    z-index: $level-4;
}

@mixin transformLayer($layer-map) {
    @each $key, $value in $layer-map {
        @each $selector, $transform in map-get($layer-map, $key) {
            .#{$selector} .#{$key} {
                transform: $transform;
            }
        }
    }
}

@media screen {
    $transform: (
        layer-tower: (
            active-section-5: translateY(0),
            active-section-4: translateY(30vw),
            active-section-3: translateY(90vw),
            active-section-2: translateY(160vw),
            active-section-1: translateY(200vw),
            active-section-0: translateY(200vw)
        ),
        layer-gras: (
            active-section-5: translateY(0),
            active-section-4: translateY(3vw),
            active-section-3: translateY(6vw),
            active-section-2: translateY(9vw),
            active-section-1: translateY(12vw),
            active-section-0: translateY(12vw)
        )
    );
    @include transformLayer($transform);
}

@media screen and (orientation: portrait) {
    $transform: (
        layer-tower: (
            active-section-5: translateY(0),
            active-section-4: translateY(-20vw) scale(1.5),
            active-section-3: translateY(60vw),
            active-section-2: translateY(120vw),
            active-section-1: translateY(180vw),
            active-section-0: translateY(180vw)
        )
    );
    @include transformLayer($transform);
}

.layer-tower-top {
    opacity: 0;
    transition: transform 500ms ease-out 300ms, opacity 500ms ease;

     transform: translateY(5vw);
}

.layer-greenarea-top {
     opacity: 0;
     transform: translateY(0);
         transition: transform 500ms ease-out, opacity 500ms ease-out;
}
.layer-city-top {

     transform: translateY(-12vw) scale(1.02);
         transition: transform 500ms ease-out, opacity 450ms ease-out;
     opacity: 0;

}

.active-section-0,
.active-section-1  {
    .layer-tower, .layer-gras {
        transition: transform 500ms ease-out, opacity 500ms ease;
        opacity: 0;
    }

    .layer-tower-top {
        transition: transform 500ms ease-out 50ms, opacity 500ms ease;
        transform: translateY(0);
        opacity: 1;
    }

    .layer-city-top {
        transition: transform 500ms ease-out 50ms, opacity 350ms ease 100ms;
        transform: translateY(-10vw) scale(1);
        opacity: 1;
    }

    .layer-greenarea-top {
        transition: transform 500ms ease-out 50ms, opacity 350ms ease 100ms;
        transform: translateY(3.5vw) scale(1);
        opacity: 1;
    }
}

.active-section-1  {

    .layer-tower-top {
        transform: translateY(0);
    }

    .layer-city-top {
        transform: translateY(-9vw) scale(1);
    }

    .layer-greenarea-top {
        transform: translateY(3vw) scale(1);
    }
}

/* General background styling */
.layer-gras,
.layer-tower,
.layer-city-top,
.layer-greenarea-top,
.layer-tower-top {
    background-size: 100% auto;
    background-repeat: none;

    img {
        opacity: 0;
    }
}


/* Media query background images */

$sizes-list: 400 600 800 1000 1200 1400 1600;
@each $size in $sizes-list {

    $mqsize: #{$size}px;
    $mqtype: min;

    @if $size == 400 {
        $mqsize: 600px;
        $mqtype: max;
    }

    @media (#{$mqtype}-width: $mqsize) {

        .layer-gras {
            background-image: url('../../image/grass/png/#{$size}.png');

            .webp & {
                background-image: url('../../image/grass/webp/#{$size}.webp');
            }
        }

        .layer-tower {
            background-image: url('../../image/karnan/png/#{$size}.png');

            .webp & {
                background-image: url('../../image/karnan/webp/#{$size}.webp');
            }
        }

        .layer-city-top {
            background-image: url('../../image/top/city/png/#{$size}.png');

            .webp & {
                background-image: url('../../image/top/city/webp/#{$size}.webp');
            }
        }

        .layer-greenarea-top {
            background-image: url('../../image/top/greenarea/png/#{$size}.png');

            .webp & {
                background-image: url('../../image/top/greenarea/webp/#{$size}.webp');
            }
        }

        .layer-tower-top {
            background-image: url('../../image/top/tower/png/#{$size}.png');

            .webp & {
                background-image: url('../../image/top/tower/webp/#{$size}.webp');
            }
        }

    }
}

.onepage-section.next-section,
.onepage-section.prev-section {
    transition: opacity 0s 0s;
}
